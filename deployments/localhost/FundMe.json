{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAdress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xdd3ca8c811f74e0b5f4b5f866dea0079308244e9bc8c879a0de0e156bf0aa481",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1034818",
    "logsBloom": "0x
    "blockHash": "0x7cd1bc508925678c41f459af9093018fc28beac314c6ddc19077b891ff24e9e2",
    "transactionHash": "0xdd3ca8c811f74e0b5f4b5f866dea0079308244e9bc8c879a0de0e156bf0aa481",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1034818",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "e5ca9de05ef7a03f19d3b26e75f4b742",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAdress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 5 * 10**18;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(address priceFeedAdress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAdress);\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() external payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        uint256 fundersL = funders.length;\\n        uint256 funderIndex;\\n        for (funderIndex = 0; funderIndex < fundersL; funderIndex++) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function getOwner() external view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) external view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() external view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x3859a516e028411b8952ee0f293ff348bb72edac0124c70f94e966d75c765f8a\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xb6270c86e57bfed077355468d6a934f19843e652c7ce8ecec9cde9e72c6fbac9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012e0380380620012e0833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c61115a620001866000396000818161033401528181610582015281816105d201526107cc015261115a6000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610135578063b60d428814610160578063be2693f01461016a578063d7b4750c146101745761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100df578063893d20e81461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a92565b6102ea565b6040516100cc9190610ad8565b60405180910390f35b6100dd610332565b005b3480156100eb57600080fd5b506100f4610572565b6040516101019190610ad8565b60405180910390f35b34801561011657600080fd5b5061011f61057e565b60405161012c9190610b02565b60405180910390f35b34801561014157600080fd5b5061014a6105a6565b6040516101579190610b7c565b60405180910390f35b6101686101b1565b005b6101726105d0565b005b34801561018057600080fd5b5061019b60048036038101906101969190610bc3565b610864565b6040516101a89190610b02565b60405180910390f35b674563918244f400006101ef600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108ac90919063ffffffff16565b1015610230576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022790610c4d565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027e9190610c9c565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b7576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610462576000600182815481106103dd576103dc610cf2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045a90610d21565b9150506103ba565b50600067ffffffffffffffff81111561047e5761047d610d6a565b5b6040519080825280602002602001820160405280156104ac5781602001602082028036833780820191505090505b50600190805190602001906104c2929190610988565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104e990610dca565b60006040518083038185875af1925050503d8060008114610526576040519150601f19603f3d011682016040523d82523d6000602084013e61052b565b606091505b505090508061056f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056690610e2b565b60405180910390fd5b50565b674563918244f4000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610655576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106d957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161068f575b5050505050905060008151905060005b8181101561076857600083828151811061070657610705610cf2565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061076090610d21565b9150506106e9565b600067ffffffffffffffff81111561078357610782610d6a565b5b6040519080825280602002602001820160405280156107b15781602001602082028036833780820191505090505b50600190805190602001906107c7929190610988565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161080e90610dca565b60006040518083038185875af1925050503d806000811461084b576040519150601f19603f3d011682016040523d82523d6000602084013e610850565b606091505b505090508061085e57600080fd5b50505050565b60006001828154811061087a57610879610cf2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108b8836108e8565b90506000670de0b6b3a764000085836108d19190610e4b565b6108db9190610ed4565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561093157600080fd5b505afa158015610945573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109699190610f92565b5050509150506402540be40081610980919061100d565b915050919050565b828054828255906000526020600020908101928215610a01579160200282015b82811115610a005782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109a8565b5b509050610a0e9190610a12565b5090565b5b80821115610a2b576000816000905550600101610a13565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a5f82610a34565b9050919050565b610a6f81610a54565b8114610a7a57600080fd5b50565b600081359050610a8c81610a66565b92915050565b600060208284031215610aa857610aa7610a2f565b5b6000610ab684828501610a7d565b91505092915050565b6000819050919050565b610ad281610abf565b82525050565b6000602082019050610aed6000830184610ac9565b92915050565b610afc81610a54565b82525050565b6000602082019050610b176000830184610af3565b92915050565b6000819050919050565b6000610b42610b3d610b3884610a34565b610b1d565b610a34565b9050919050565b6000610b5482610b27565b9050919050565b6000610b6682610b49565b9050919050565b610b7681610b5b565b82525050565b6000602082019050610b916000830184610b6d565b92915050565b610ba081610abf565b8114610bab57600080fd5b50565b600081359050610bbd81610b97565b92915050565b600060208284031215610bd957610bd8610a2f565b5b6000610be784828501610bae565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c37601b83610bf0565b9150610c4282610c01565b602082019050919050565b60006020820190508181036000830152610c6681610c2a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ca782610abf565b9150610cb283610abf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ce757610ce6610c6d565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d2c82610abf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d5f57610d5e610c6d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610db4600083610d99565b9150610dbf82610da4565b600082019050919050565b6000610dd582610da7565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e15600b83610bf0565b9150610e2082610ddf565b602082019050919050565b60006020820190508181036000830152610e4481610e08565b9050919050565b6000610e5682610abf565b9150610e6183610abf565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e9a57610e99610c6d565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610edf82610abf565b9150610eea83610abf565b925082610efa57610ef9610ea5565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f2481610f05565b8114610f2f57600080fd5b50565b600081519050610f4181610f1b565b92915050565b6000819050919050565b610f5a81610f47565b8114610f6557600080fd5b50565b600081519050610f7781610f51565b92915050565b600081519050610f8c81610b97565b92915050565b600080600080600060a08688031215610fae57610fad610a2f565b5b6000610fbc88828901610f32565b9550506020610fcd88828901610f68565b9450506040610fde88828901610f7d565b9350506060610fef88828901610f7d565b925050608061100088828901610f32565b9150509295509295909350565b600061101882610f47565b915061102383610f47565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561106257611061610c6d565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561109f5761109e610c6d565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110dc576110db610c6d565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561111957611118610c6d565b5b82820290509291505056fea2646970667358221220fed7715238b04ed6af88d03b7f08f81273e11f035414606b6912011039e6f7bc64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610135578063b60d428814610160578063be2693f01461016a578063d7b4750c146101745761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100df578063893d20e81461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a92565b6102ea565b6040516100cc9190610ad8565b60405180910390f35b6100dd610332565b005b3480156100eb57600080fd5b506100f4610572565b6040516101019190610ad8565b60405180910390f35b34801561011657600080fd5b5061011f61057e565b60405161012c9190610b02565b60405180910390f35b34801561014157600080fd5b5061014a6105a6565b6040516101579190610b7c565b60405180910390f35b6101686101b1565b005b6101726105d0565b005b34801561018057600080fd5b5061019b60048036038101906101969190610bc3565b610864565b6040516101a89190610b02565b60405180910390f35b674563918244f400006101ef600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108ac90919063ffffffff16565b1015610230576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022790610c4d565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027e9190610c9c565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b7576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610462576000600182815481106103dd576103dc610cf2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045a90610d21565b9150506103ba565b50600067ffffffffffffffff81111561047e5761047d610d6a565b5b6040519080825280602002602001820160405280156104ac5781602001602082028036833780820191505090505b50600190805190602001906104c2929190610988565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104e990610dca565b60006040518083038185875af1925050503d8060008114610526576040519150601f19603f3d011682016040523d82523d6000602084013e61052b565b606091505b505090508061056f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056690610e2b565b60405180910390fd5b50565b674563918244f4000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610655576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106d957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161068f575b5050505050905060008151905060005b8181101561076857600083828151811061070657610705610cf2565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061076090610d21565b9150506106e9565b600067ffffffffffffffff81111561078357610782610d6a565b5b6040519080825280602002602001820160405280156107b15781602001602082028036833780820191505090505b50600190805190602001906107c7929190610988565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161080e90610dca565b60006040518083038185875af1925050503d806000811461084b576040519150601f19603f3d011682016040523d82523d6000602084013e610850565b606091505b505090508061085e57600080fd5b50505050565b60006001828154811061087a57610879610cf2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108b8836108e8565b90506000670de0b6b3a764000085836108d19190610e4b565b6108db9190610ed4565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561093157600080fd5b505afa158015610945573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109699190610f92565b5050509150506402540be40081610980919061100d565b915050919050565b828054828255906000526020600020908101928215610a01579160200282015b82811115610a005782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109a8565b5b509050610a0e9190610a12565b5090565b5b80821115610a2b576000816000905550600101610a13565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a5f82610a34565b9050919050565b610a6f81610a54565b8114610a7a57600080fd5b50565b600081359050610a8c81610a66565b92915050565b600060208284031215610aa857610aa7610a2f565b5b6000610ab684828501610a7d565b91505092915050565b6000819050919050565b610ad281610abf565b82525050565b6000602082019050610aed6000830184610ac9565b92915050565b610afc81610a54565b82525050565b6000602082019050610b176000830184610af3565b92915050565b6000819050919050565b6000610b42610b3d610b3884610a34565b610b1d565b610a34565b9050919050565b6000610b5482610b27565b9050919050565b6000610b6682610b49565b9050919050565b610b7681610b5b565b82525050565b6000602082019050610b916000830184610b6d565b92915050565b610ba081610abf565b8114610bab57600080fd5b50565b600081359050610bbd81610b97565b92915050565b600060208284031215610bd957610bd8610a2f565b5b6000610be784828501610bae565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c37601b83610bf0565b9150610c4282610c01565b602082019050919050565b60006020820190508181036000830152610c6681610c2a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ca782610abf565b9150610cb283610abf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ce757610ce6610c6d565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d2c82610abf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d5f57610d5e610c6d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610db4600083610d99565b9150610dbf82610da4565b600082019050919050565b6000610dd582610da7565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e15600b83610bf0565b9150610e2082610ddf565b602082019050919050565b60006020820190508181036000830152610e4481610e08565b9050919050565b6000610e5682610abf565b9150610e6183610abf565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e9a57610e99610c6d565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610edf82610abf565b9150610eea83610abf565b925082610efa57610ef9610ea5565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f2481610f05565b8114610f2f57600080fd5b50565b600081519050610f4181610f1b565b92915050565b6000819050919050565b610f5a81610f47565b8114610f6557600080fd5b50565b600081519050610f7781610f51565b92915050565b600081519050610f8c81610b97565b92915050565b600080600080600060a08688031215610fae57610fad610a2f565b5b6000610fbc88828901610f32565b9550506020610fcd88828901610f68565b9450506040610fde88828901610f7d565b9350506060610fef88828901610f7d565b925050608061100088828901610f32565b9150509295509295909350565b600061101882610f47565b915061102383610f47565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561106257611061610c6d565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561109f5761109e610c6d565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110dc576110db610c6d565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561111957611118610c6d565b5b82820290509291505056fea2646970667358221220fed7715238b04ed6af88d03b7f08f81273e11f035414606b6912011039e6f7bc64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
{
  "address": "0xf63F3C7B78635dF6Ee159287b4CF08Ac2779ac98",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "doStuff",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x150c4091dced9b59062f2340d9d935e0f23f09e691ccecd2661084bcf425542b",
  "receipt": {
    "to": null,
    "from": "0x4834007841708e80195b2bdbA313b2EAC77acB32",
    "contractAddress": "0xf63F3C7B78635dF6Ee159287b4CF08Ac2779ac98",
    "transactionIndex": 10,
    "gasUsed": "227330",
    "logsBloom": "0x
    "blockHash": "0x585da2588df0c61f73e431aeab0dbd9f31ea988599ae9d68c9296aa83cc29ce2",
    "transactionHash": "0x150c4091dced9b59062f2340d9d935e0f23f09e691ccecd2661084bcf425542b",
    "logs": [],
    "blockNumber": 7577800,
    "cumulativeGasUsed": "1381826",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "e5ca9de05ef7a03f19d3b26e75f4b742",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"doStuff\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/storage/FunWithStorage.sol\":\"FunWithStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/storage/FunWithStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract FunWithStorage {\\n    uint256 favNumber;\\n    bool someBool;\\n    uint256[] myArray;\\n\\n    mapping(uint256 => bool) myMap;\\n\\n    uint256 constant NOT_IN_STORAGE = 123;\\n    uint256 immutable i_not_in_storage;\\n\\n    constructor() {\\n        favNumber = 25;\\n        someBool = true;\\n        myArray.push(222);\\n        myMap[0] = true;\\n        i_not_in_storage = 123;\\n    }\\n\\n    function doStuff() public view {\\n        uint256 newVar = favNumber + 1;\\n        bool otherVar = someBool;\\n    }\\n}\\n\",\"keccak256\":\"0x1849e2935086c5786e2376b428f2910344f94a214a12315f6b1615ba4830ef68\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50601960008190555060018060006101000a81548160ff021916908315150217905550600260de908060018154018082558091505060019003906000526020600020016000909190919091505560016003600080815260200190815260200160002060006101000a81548160ff021916908315150217905550607b6080818152505060805161011c6100aa6000396000505061011c6000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063874f33a114602d575b600080fd5b60336035565b005b60006001600054604491906097565b90506000600160009054906101000a900460ff1690505050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060a082605e565b915060a983605e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111560db5760da6068565b5b82820190509291505056fea2646970667358221220af3e3afbdbe8e14900d9b361321f6c593c15de5815e6e3c1c74edea8a798180564736f6c63430008080033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c8063874f33a114602d575b600080fd5b60336035565b005b60006001600054604491906097565b90506000600160009054906101000a900460ff1690505050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060a082605e565b915060a983605e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111560db5760da6068565b5b82820190509291505056fea2646970667358221220af3e3afbdbe8e14900d9b361321f6c593c15de5815e6e3c1c74edea8a798180564736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 377,
        "contract": "contracts/storage/FunWithStorage.sol:FunWithStorage",
        "label": "favNumber",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 379,
        "contract": "contracts/storage/FunWithStorage.sol:FunWithStorage",
        "label": "someBool",
        "offset": 0,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 382,
        "contract": "contracts/storage/FunWithStorage.sol:FunWithStorage",
        "label": "myArray",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 386,
        "contract": "contracts/storage/FunWithStorage.sol:FunWithStorage",
        "label": "myMap",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_bool)"
      }
    ],
    "types": {
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}